workflows:

  casual_shopper:
    vus: 100
    setup_queries:
      - create_shopper
      - fetch_product_names
    queries:
      - name: browse_product
        rate: 2/1s
      - name: add_to_basket
        rate: 1/5s
      - name: checkout
        rate: 1/30s
      - name: check_order
        rate: 1/10s

  dispatcher:
    vus: 4
    queries:
      - name: dispatch_product
        rate: 1/10s

  payment_provider:
    vus: 1
    queries:
      - name: process_payment
        rate: 1/1s

activities:

  create_shopper:
    type: query
    args:
      - type: gen
        value: email
    query: |-
      INSERT INTO shopper (email)
      VALUES ($1)
      RETURNING id

  fetch_product_names:
    type: query
    args:
      - type: int
        min: 10
        max: 10
    query: |-
      SELECT name
      FROM product
      ORDER BY random()
      LIMIT $1;

  browse_product:
    args:
      - type: ref
        query: fetch_product_names
        column: name
    type: query
    query: |-
      SELECT id FROM product
      WHERE name = $1
  
  add_to_basket:
    args:
      - type: ref
        query: create_shopper
        column: id
      - type: ref
        query: browse_product
        column: id
    type: query
    query: |-
      INSERT INTO basket (shopper_id, product_id)
      VALUES ($1, $2)
      ON CONFLICT (shopper_id, product_id) 
      DO UPDATE SET quantity = basket.quantity + 1

  checkout:
    args:
      - type: ref
        query: create_shopper
        column: id
    type: query
    query: |-
      SELECT checkout($1) AS id

  check_order:
    args:
      - type: ref
        query: checkout
        column: id
      - type: ref
        query: create_shopper
        column: id
    type: query
    query: |-
      SELECT status
      FROM purchase
      WHERE id = $1
      AND shopper_id = $2

  dispatch_product:
    args:
      - type: int
        min: 10
        max: 10
    type: exec
    query: |-
      UPDATE purchase
      SET status = 'dispatched'
      WHERE status = 'payment_successful'
      LIMIT $1;


  process_payment:
    args:
      - type: set
        values: [payment_successful, payment_failed]
        weights: [95, 5]
      - type: int
        min: 100
        max: 100
    type: exec
    query: |-
      UPDATE purchase
      SET status = $1
      WHERE status = 'pending'
      LIMIT $2;